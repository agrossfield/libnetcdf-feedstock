commit 46ed3a1da720ca9ec180974f3ebfb97b4286e6ce
Author: Dennis Heimbigner <dmh@ucar.edu>
Date:   Fri Sep 16 18:58:36 2022 -0600

    Cleanup built test sources in nczarr_test
    
    re: https://github.com/conda-forge/libnetcdf-feedstock/pull/140
    
    Some test are BUILTSOURCE in nczarr_test. But apparently
    I did not do it correctly. SO try to cleanup their construction.

diff --git a/nczarr_test/Makefile.am b/nczarr_test/Makefile.am
index 6c237d778..1798455aa 100644
--- a/nczarr_test/Makefile.am
+++ b/nczarr_test/Makefile.am
@@ -129,7 +129,7 @@ EXTRA_DIST = CMakeLists.txt \
 run_ut_map.sh run_ut_mapapi.sh run_ut_misc.sh run_ut_chunk.sh run_ncgen4.sh \
 run_nccopyz.sh run_fillonlyz.sh run_chunkcases.sh test_nczarr.sh run_perf_chunks1.sh run_s3_cleanup.sh \
 run_purezarr.sh run_interop.sh run_misc.sh \
-run_filter.sh run_specific_filters.sh \
+run_filter.sh \
 run_newformat.sh run_nczarr_fill.sh run_quantize.sh \
 run_jsonconvention.sh run_nczfilter.sh run_unknown.sh \
 run_scalar.sh run_strings.sh run_nulls.sh
@@ -161,7 +161,7 @@ EXTRA_DIST += ref_power_901_constants_orig.zip ref_power_901_constants.cdl ref_q
 
 CLEANFILES = ut_*.txt ut*.cdl tmp*.nc tmp*.cdl tmp*.txt tmp*.dmp tmp*.zip tmp*.nc tmp*.dump tmp*.tmp tmp_ngc.c ref_zarr_test_data.cdl tst_*.nc.zip ref_quotes.zip ref_power_901_constants.zip
 
-BUILT_SOURCES = test_quantize.c test_filter_avail.c run_specific_filters.sh run_filterinstall.sh
+BUILT_SOURCES = test_quantize.c test_filter_avail.c run_specific_filters.sh run_filterinstall.sh run_unknown.sh
 test_quantize.c: $(top_srcdir)/nc_test4/tst_quantize.c
 	rm -f $@
 	echo "#define TESTNCZARR" > $@
diff --git a/CMakeLists.txt b/CMakeLists.txt
index ba66a6d..f987eb5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1057,17 +1078,26 @@ OPTION(ENABLE_BYTERANGE "Enable byte-range access to remote datasets.." OFF)
 # Check for the math library so it can be explicitly linked.
 IF(NOT WIN32)
   FIND_LIBRARY(HAVE_LIBM NAMES math m libm)
-  MESSAGE(STATUS "Found Math library: ${HAVE_LIBM}")
   IF(NOT HAVE_LIBM)
-    MESSAGE(FATAL_ERROR "Unable to find the math library.")
+    CHECK_FUNCTION_EXISTS(exp HAVE_LIBM_FUNC)
+    IF(NOT HAVE_LIBM_FUNC)
+        MESSAGE(FATAL_ERROR "Unable to find the math library.")
+    ELSE(NOT HAVE_LIBM_FUNC)
+        SET(HAVE_LIBM "")
+    ENDIF()
+  ELSE(NOT HAVE_LIBM)
+    MESSAGE(STATUS "Found Math library: ${HAVE_LIBM}")
   ENDIF()
 ENDIF()
 
 # Option to Enable DAP long tests, remote tests.
 OPTION(ENABLE_DAP_REMOTE_TESTS "Enable DAP remote tests." ON)
+OPTION(ENABLE_EXTERNAL_SERVER_TESTS "Enable external Server remote tests." OFF)
 OPTION(ENABLE_DAP_LONG_TESTS "Enable DAP long tests." OFF)
 SET(REMOTETESTSERVERS "remotetest.unidata.ucar.edu" CACHE STRING "test servers to use for remote test")
 
+SET(REMOTETESTSERVERS "remotetest.unidata.ucar.edu" CACHE STRING "test servers to use for remote test")
+
 # See if we have zlib
 FIND_PACKAGE(ZLIB)
 @@ -1057,17 +1078,26 @@ OPTION(ENABLE_BYTERANGE "Enable byte-range access to remote datasets.." OFF)
 # Check for the math library so it can be explicitly linked.
 IF(NOT WIN32)
   FIND_LIBRARY(HAVE_LIBM NAMES math m libm)
-  MESSAGE(STATUS "Found Math library: ${HAVE_LIBM}")
   IF(NOT HAVE_LIBM)
-    MESSAGE(FATAL_ERROR "Unable to find the math library.")
+    CHECK_FUNCTION_EXISTS(exp HAVE_LIBM_FUNC)
+    IF(NOT HAVE_LIBM_FUNC)
+        MESSAGE(FATAL_ERROR "Unable to find the math library.")
+    ELSE(NOT HAVE_LIBM_FUNC)
+        SET(HAVE_LIBM "")
+    ENDIF()
+  ELSE(NOT HAVE_LIBM)
+    MESSAGE(STATUS "Found Math library: ${HAVE_LIBM}")
   ENDIF()
 ENDIF()
 
 # Option to Enable DAP long tests, remote tests.
 OPTION(ENABLE_DAP_REMOTE_TESTS "Enable DAP remote tests." ON)
+OPTION(ENABLE_EXTERNAL_SERVER_TESTS "Enable external Server remote tests." OFF)
 OPTION(ENABLE_DAP_LONG_TESTS "Enable DAP long tests." OFF)
 SET(REMOTETESTSERVERS "remotetest.unidata.ucar.edu" CACHE STRING "test servers to use for remote test")
 
+SET(REMOTETESTSERVERS "remotetest.unidata.ucar.edu" CACHE STRING "test servers to use for remote test")
+
 # See if we have zlib
 FIND_PACKAGE(ZLIB)